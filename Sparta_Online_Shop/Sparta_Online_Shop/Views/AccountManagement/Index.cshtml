@model Sparta_Online_Shop.Models.PasswordConfirmationModel

@{
    ViewBag.Title = "Account Management";
}

<style type="text/css">
    body{
        background-color: #36393F;
    }

    form{
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
    div.PasswordForm {
        align-content: center;
    }
    main{
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
</style>

<main style="margin: auto; width: 500px; text-align: center">
    <div style="height: 50%; padding:0 15%; max-width:900px; margin:auto;">

        <h1 style="padding-top:50px; color: #c41541; font-weight: bold;">
            Change Password
        </h1>

    </div>
    <div style="text-align: left; padding: 10px 0;" id="PasswordForm">
        <div style="padding: 0 30px;">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-group align-content-center">
                    <div class="col-md-12" style="padding: 0">
                        @Html.EditorFor(model => model.OldPassword, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                placeholder = Html.DisplayNameFor(model => model.OldPassword)
                            }
                        })
                        @Html.ValidationMessageFor(model => model.OldPassword, "", new
                        {
                            @class = "text-danger"
                        })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12" style="padding: 0">
                        @Html.EditorFor(model => model.NewPassword, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                placeholder = Html.DisplayNameFor(model => model.NewPassword)
                            }
                        })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new
                        {
                            @class = "text-danger"
                        })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12" style="padding: 0">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.ConfirmPassword) } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12" style="padding:0">
                        <input type="submit" value="Confirm" class="btn" />
                    </div>
                </div>


            }
        </div>
    </div>
</main>

<!--Render UserReviews As Partial View-->
<div>
    @{
        Html.RenderAction("UserReviews", "Reviews");
    }
</div>
<script type="text/javascript" src="~/Content/js/jquery-3.4.1.min.js"></script>
<!-- Bootstrap tooltips -->
<script type="text/javascript" src="~/Content/js/popper.min.js"></script>
<!-- Bootstrap core JavaScript -->
@*<script type="text/javascript" src="~/Content/js/bootstrap.min.js"></script>*@
<!-- MDB core JavaScript -->
<script type="text/javascript" src="~/Content/js/mdb.min.js"></script>
<!-- Initializations -->
<script type="text/javascript"> // Animations initialization
    new WOW().init();</script>